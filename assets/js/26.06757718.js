(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{306:function(t,n,s){"use strict";s.r(n);var e=s(14),a=Object(e.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"初始化流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#初始化流程"}},[t._v("#")]),t._v(" 初始化流程")]),t._v(" "),n("p",[t._v("介绍从 new Vue(),到页面展示组件的大致流程。")]),t._v(" "),n("h2",{attrs:{id:"_1-调用new-vue-之前到都做了哪些事"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-调用new-vue-之前到都做了哪些事"}},[t._v("#")]),t._v(" 1.调用new Vue()之前到都做了哪些事")]),t._v(" "),n("p",[t._v("1.定义vue构造函数,并通过函数的原型（prototype）绑定一些方法，组件实列可以调这些方法进行对应的流程处理。")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Vue")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("options")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("initMixin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Vue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// _init 组件初始化，数据响应式处理，调下面4个绑定实列方法。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("stateMixin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Vue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加$set、$del、$watch方法。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("eventsMixin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Vue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加 $on、$once、$off、$emit")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lifecycleMixin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Vue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// _update $forceUpdate $destroy")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("renderMixin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Vue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// _render调组件的render方法、$nextTick")]),t._v("\n")])])]),n("p",[t._v("2.添加Vue函数的静态方法 initGlobalAPI")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("1. Vue.set Vue.del Vue.observable\n2. Vue.component Vue.filter Vue.directive\n3. Vue.nextTick\n4. Vue.use Vue.extends 等\n")])])]),n("h2",{attrs:{id:"_2-使用-new-vue-选项-时执行的大致过程。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用-new-vue-选项-时执行的大致过程。"}},[t._v("#")]),t._v(" 2.使用 new Vue(选项)时执行的大致过程。")]),t._v(" "),n("p",[t._v("1.调initMixin绑定_init方法。主要的功能有：\n1. 初始化组件的一些属性如：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("    ```\n        vm.$parent = options.parent;\n        vm.$children = [];\n        vm.$refs = {};\n        vm._watcher = null;\n    ```\n2. 注册父组件监听的事件。\n3. 为render相关的函数绑定组件this。如_c,解析插槽。\n4. 处理inject.\n5. 处理state，响应式处理。\n6. 挂载组件调$mount()\n")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);